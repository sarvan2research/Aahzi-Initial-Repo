generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type CutoffCutoffDetailsList {
  courseCode   String
  courseName   String
  /// Multiple data types found: Float: 49.2%, Int: 50.8% out of 2750 sampled entries
  cutOffBC     Float?
  /// Multiple data types found: Float: 50.8%, Int: 49.2% out of 2750 sampled entries
  cutOffBCM    Float?
  /// Multiple data types found: Float: 50.5%, Int: 49.5% out of 2750 sampled entries
  cutOffMBC    Float?
  /// Multiple data types found: Float: 51.4%, Int: 48.6% out of 2750 sampled entries
  cutOffOC     Float
  /// Multiple data types found: Float: 48.3%, Int: 51.7% out of 2750 sampled entries
  cutOffSC     Float?
  /// Multiple data types found: Float: 52%, Int: 48% out of 2750 sampled entries
  cutOffSCA    Float?
  /// Multiple data types found: Float: 52%, Int: 48% out of 2750 sampled entries
  cutOffST     Float?
  /// Could not determine type: the field only had null or empty values in the sample set.
  cutoffMBCDNC Float?
  /// Could not determine type: the field only had null or empty values in the sample set.
  cutoffMBCV   Float?
  year         Int
}

type RankRankDetailsList {
  courseCode String
  courseName String
  rankBC     Int?
  rankBCM    Int?
  /// Could not determine type: the field only had null or empty values in the sample set.
  rankMBC    Float?
  /// Could not determine type: the field only had null or empty values in the sample set.
  rankMBCDNC Float?
  /// Could not determine type: the field only had null or empty values in the sample set.
  rankMBCV   Float?
  rankOC     Int
  rankSC     Int?
  rankSCA    Int?
  rankST     Int?
  year       Int
}

model Cutoff {
  id                String                    @id @default(auto()) @map("_id") @db.ObjectId
  collegeCode       Int
  collegeName       String
  cutoffDetailsList CutoffCutoffDetailsList[]
}

model GuestUser {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  mobileNumber String
  community    String
  course       String
  cutoffMarks  Float
  createdAt    DateTime? @db.Date
}

model Rank {
  id              String                @id @default(auto()) @map("_id") @db.ObjectId
  collegeCode     Int
  collegeName     String
  rankDetailsList RankRankDetailsList[]
}

model GuestRankUser {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  mobileNumber String
  community    String
  course       String
  collegeName  String
  rank         Float
  createdAt    DateTime? @db.Date
}
